This is a short overview of the gpac library source repository. 
  
gpac/src/bifs
	BInary Format for Scene coding (decoder and encoder) (BIFS tables are with MPEG4Gen application)

gpac/src/ietf
	Small RTP/RTSP/SDP library, plus media packetizers.

gpac/src/isomedia
	IsoMedia File Format - features file reading/writing/editing, precise interleaving, hint track creation 
and supports movie fragments (read/write). Includes 3GPP/3GPP2 features and simple AVC support - JPEG2000 support to be done.

gpac/src/mcrypt
	Port of libmcrypt into gpac for cryptographic tool. Currently only AES-128 CTR mode is used, but the other tools will likely be usefull for IPMPX

gpac/src/media_tools
	media tools for authoring: ISMA & 3GPP tools, media importing and exporting, hinting

gpac/src/odf
	MPEG-4 Object Descriptor Framework: encoding/decoding of all descriptors, OD codec and OCI codec

gpac/src/compositor
	Compositor for 2D & 3D drawing - handles MPEG-4, X3D/VRML and SVG.

gpac/src/scene_manager
	memory representation of the scene, importers (BT/XMT/SWF/QT), dumpers and encoding

gpac/src/scenegraph
	Scene Graph API (MPEG4/VRML/X3D/SVG) 

gpac/src/terminal
	Client application engine. The guts of the gpac client performing stream synchronization and 
media object setup, control and decoding. All decoders / network services are abstracted through plugins

gpac/src/utils
	All generic objects used throughout the lib (list, bitstream, thread, mutex...)
The OS specific files are in dedicated sub_folders (eg ./Tools/w32 for all windows code, ...)
porting the lib means barely porting these files and updating the makefile

gpac/include/gpac
	all exported files of the lib (high level APIs). Development headers are <gpac/file>

gpac/include/gpac/internal
	all development files of the lib (low level access).

gpac/include/gpac/modules
	all module APIs defined in GPAC.
