#!/bin/bash

echo -e "\033[32m Note: You have to install Android NDK and setup the environment first!\033[0m"
echo -e "\033[32m Note: You have to compile extra_libs first!\033[0m"

if [ -z "$1" ]
then
  echo "Usage: $0 PATH_TO_ANDROID_NDK [ADDITIONAL_NDK-BUILD arguments] : You must give as first argument the directory path of the NDK"
  exit 1
fi

if [ -z "$2" ]
then
  echo -e "\033[34m Usage: $0 PATH_TO_ANDROID_SDK : You have not give the directory path of SDK. Auto build of Osmo4.apk not possible. Build it with Eclipse \033[0m"
fi

if [ -z "$3" ]
then
  echo -e "\033[34m Usage: $0 PATH_TO_ANT : You have not give the directory path of ANT. Auto build of Osmo4.apk not possible. Build it with Eclipse \033[0m"
fi

export PATH="$1:$PATH"

if [ -w "$3" ] && [ -w "$2" ]
then 
export PATH="$2/tools:$3/bin:$PATH"
shift 3
ANT=1
else
ANT=0
shift
fi


# Be sure to resolve if script not called from its directory
export BUILDPATH=$(dirname "$0")
cd $BUILDPATH || exit 1
export BUILDPATH=$(pwd)
echo "Current Dir = $BUILDPATH"
version=$(svnversion)
echo "*** Build path is $BUILDPATH, setting revision number $version"
grep "$version" ../../../include/gpac/version.h 1>/dev/null && echo "Version $version already set" || echo "#define GPAC_SVN_REVISION \"$version\"" > ../../../include/gpac/version.h || exit 1
cd ../../../ || exit 1
BASEPATH=$(pwd)

rm -rf $BUILDPATH/../obj/local/armeabi/* || mkdir $BUILDPATH/../obj/local/armeabi
rm -rf $BUILDPATH/../obj/local/armeabi-v7a/* || mkdir $BUILDPATH/../obj/local/armeabi-v7a


cd $BUILDPATH || exit 1
echo -n "Buiding all libs (libgpac and modules) from $BUILDPATH..."
ndk-build $* && echo "[OK] build successful." || echo "Build FAILED" || exit 1

#echo "Copying modules to modules dir..."
cd ../libs/ || exit 1
#for i in $(find . -name 'gm*.so')
#do
#	echo -n "$i..."
#	cp "$i" "$BASEPATH/applications/osmo4_android/res/raw/" || exit 1
#done
#echo
#echo "[OK] success." 

LIBS_DIR="$BASEPATH/applications/osmo4_android/libs/"
echo "Copying libs to libs dir $LIBS_DIR ..."
for i in $(find . -name '*.so')
do
	echo -n "$i..."
	cp "$i" "$LIBS_DIR/$i" || exit 1
done
echo
echo "[OK] success module for Osmo4."


LIBS_DIR="$BASEPATH/applications/mp4box_android/libs/"
echo "Copying libs to libs dir $LIBS_DIR ..."
for i in $(find . \( -name '*.so' \) -a \( -name "*ft2*" -o -name "*edit*" -o -name "*libgpac.so*" -o -name "*jpeg*" -o -name "*js_osmo*" -o -name "*mp4box*" -o -name "*openjpeg*" -o -name "*png*" -o -name "*libz.*" \) )
do
echo "$i"
cp "$i" "$LIBS_DIR/$i" || exit 1
done
echo
echo "[OK] success module for MP4box."


LIBS_DIR="$BASEPATH/applications/osmo4_android/libs/"
cd "$BASEPATH/extra_lib/lib/android" || exit 1
echo "Copying all extra libs to $LIBS_DIR ..."
for i in $(find . -name '*.so')
do
	echo -n "$i..."
	cp "$i" "$LIBS_DIR/$i" || exit 1
done
echo "[OK] success extra lib for Osmo4."

LIBS_DIR="$BASEPATH/applications/mp4box_android/libs/"
cd "$BASEPATH/extra_lib/lib/android" || exit 1
echo "Copying all extra libs to $LIBS_DIR ..."

for i in $(find . \( -name '*.so' \) -a \( -name "*ft2*" -o -name "*edit*" -o -name "*libgpac.so*" -o -name "*jpeg*" -o -name "*js_osmo*" -o -name "*mp4box*" -o -name "*openjpeg*" -o -name "*png*" -o -name "*libz.*" \) )
do
echo "$i"
cp "$i" "$LIBS_DIR/$i" || exit 1
done
echo "[OK] success extra lib MP4box."

#because of the 
if [ $ANT -eq 1 ]
then
echo -e "\nBuiding Osmo4.apk" 
cd $BASEPATH/applications/osmo4_android/
ant release || exit 1

zipalign -v 4 bin/Osmo4-unaligned.apk bin/Osmo4.apk
rm bin/Osmo4-*
echo -e "\n[OK] success."
fi


