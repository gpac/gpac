<svg width="800" height="800" viewBox="0 0 800 450" 
     xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" 
	 onwheel="(evt.wheelDelta > 0 ? p1.switchUp() : p1.switchDown());">

  <defs>
    <solidColor id="backColor" solid-color="blue"/>
  </defs>

  <!-- Displaying info -->
  <g id="info_main"  transform="translate( 10, 60)"/>
  <g id="info_thumb" transform="translate(410, 60)"/>

  <g id="g_thumb">
    <video id="v_main"  x="0"   y="160" width="380" height="180"/>
    <video id="v_thumb" x="410" y="160" width="320" height="240"/>
  </g>

	<!-- Fake animation to trigger periodic events (no support for setTimeout in GPAC) -->
  <g>
    <animate id="timer_anim" begin="0" dur="0.1" repeatCount="indefinite" attributeName="visibilty" from="visible" to="hidden" />
  </g>	 
	 
  <script type="application/ecmascript" xlink:href="bind.js"/>
  <script type="application/ecmascript" xlink:href="counter-mp4-video-segments-http.js"/>
  <script type="application/ecmascript" xlink:href="redbull-mp4-video-segments-http.js"/>
  <script type="application/ecmascript" xlink:href="gpac-mse.js"/>
  
  <script type="application/ecmascript">
    <![CDATA[


	function displaySpatialSets() {
		var v = document.getElementById('v_thumb');
		var vx = parseFloat(v.getAttribute("x"));
		var vy = parseFloat(v.getAttribute("y"));
		var vw = parseFloat(v.getAttribute("width"));
		var vh = parseFloat(v.getAttribute("height"));
		var g = document.getElementById('g_thumb');
		var r;
		var as;
		for (var spatialIndex in spatialInfo.sets) {
			as = spatialInfo.sets[spatialIndex];
			r = document.createElement('rect');
			g.appendChild(r);
			r.setAttribute("fill", "none");
			r.setAttribute("stroke", "red");
			r.setAttribute("pointer-events", "all");
			r.setAttribute("onclick", "changeVideo("+spatialIndex+")");
			r.setAttribute("stroke-width", 1);
			r.setAttribute("x", vx+vw*(as.x/spatialInfo.global.w));
			r.setAttribute("y", vy+vh*(as.y/spatialInfo.global.h));
			r.setAttribute("width", vw*(as.w/spatialInfo.global.w));
			r.setAttribute("height", vh*(as.h/spatialInfo.global.h));
		}		
	}
	
	function changeVideo(index) {
		alert("changing spatial video to "+index);
		p1.changeSegmentList(spatialInfo.sets[index].representations);
	}
	
	var spatialInfo = {
		global: { x: 0, y: 0, w: 800, h: 600 },
		sets: [
			{ x:   0, y:   0, w: 400, h: 300, representations: redBullVideoHTTPSegments },
			{ x: 400, y:   0, w: 400, h: 300, representations: redBullVideoHTTPSegments },
			{ x:   0, y: 300, w: 400, h: 300, representations: redBullVideoHTTPSegments },
			{ x: 400, y: 300, w: 400, h: 150, representations: redBullVideoHTTPSegments },
			{ x: 400, y: 450, w: 400, h: 150, representations: redBullVideoHTTPSegments },		
		]
	}
	var p1 = new Player('v_main', 'info_main', 'timer_anim', counterVideoHTTPSegments);
	var p2 = new Player('v_thumb', 'info_thumb', 'timer_anim', redBullVideoHTTPSegments);	
	p1.play();
	p2.play();
	
	displaySpatialSets();
	
	]]>
  </script>
</svg>